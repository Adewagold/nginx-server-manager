---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-manager-secrets
  namespace: nginx-manager
  labels:
    app.kubernetes.io/name: nginx-manager
    app.kubernetes.io/instance: nginx-manager
    app.kubernetes.io/component: secret
type: Opaque
stringData:
  # Application secrets
  SECRET_KEY: "CHANGE-THIS-TO-A-SECURE-SECRET-KEY"
  
  # Admin credentials
  ADMIN_USERNAME: "admin"
  ADMIN_PASSWORD: "CHANGE-THIS-TO-A-STRONG-PASSWORD"
  ADMIN_EMAIL: "admin@example.com"
  
  # SSL configuration
  SSL_EMAIL: "ssl@example.com"
  
  # Optional: Database credentials (for future PostgreSQL support)
  # DATABASE_URL: "postgresql://user:pass@postgres:5432/nginx_manager"
  # DATABASE_USER: "nginx_manager"
  # DATABASE_PASSWORD: "secure-password"

---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-manager-tls
  namespace: nginx-manager
  labels:
    app.kubernetes.io/name: nginx-manager
    app.kubernetes.io/instance: nginx-manager
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Generate with: kubectl create secret tls nginx-manager-tls --cert=tls.crt --key=tls.key --dry-run=client -o yaml
  tls.crt: LS0tLS1CRUdJTi... # Replace with your certificate
  tls.key: LS0tLS1CRUdJTi... # Replace with your private key