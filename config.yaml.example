# Nginx Site Manager Configuration
# Copy this file to config.yaml and customize for your environment
# 
# SECURITY WARNING: Change all default credentials and keys before production use!

app:
  # Application server settings
  host: "0.0.0.0"  # Use 127.0.0.1 for localhost only
  port: 8080
  debug: false  # NEVER enable in production
  
  # Secret key for JWT tokens - MUST BE CHANGED IN PRODUCTION
  # Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
  secret_key: "CHANGE-THIS-TO-A-SECURE-32-PLUS-CHARACTER-SECRET-KEY-WITH-SPECIAL-CHARS!"
  
  # JWT token expiration time (in minutes) - Reduced for better security
  access_token_expire_minutes: 30

# Administrator credentials - CHANGE THESE IMMEDIATELY
admin:
  # Admin username - Use something other than "admin"
  username: "admin"
  
  # Admin password - Use a strong password with 12+ characters
  # Include: uppercase, lowercase, numbers, special characters
  password: "CHANGE-THIS-TO-A-STRONG-PASSWORD!"

# System paths configuration
paths:
  # Nginx configuration directories
  nginx_config_dir: "/etc/nginx/sites-available"
  nginx_enabled_dir: "/etc/nginx/sites-enabled"
  
  # Web root directory for static sites
  web_root: "/var/www"
  
  # SSL certificate directory (User-accessible location)
  # Note: Certificates are stored in ~/.letsencrypt/live to avoid permission issues
  ssl_cert_dir: "~/.letsencrypt/live"
  
  # Application data directory
  data_dir: "./data"
  
  # Log files directory
  log_dir: "/var/log/nginx"

# Nginx service configuration
nginx:
  # Whether to use sudo for nginx commands
  # Set to false when using wrapper script (recommended for production)
  # Set to true when running in development or without wrapper
  use_sudo: false
  
  # Command to test nginx configuration
  test_command: "nginx -t"
  
  # Command to reload nginx
  reload_command: "systemctl reload nginx"
  
  # Command to restart nginx
  restart_command: "systemctl restart nginx"
  
  # Command to check nginx status
  status_command: "systemctl status nginx"

# File upload settings
upload:
  # Maximum file size for uploads (in bytes)
  max_file_size: 104857600  # 100MB
  
  # Allowed file extensions for uploads
  allowed_extensions:
    - ".html"
    - ".htm"
    - ".css"
    - ".js"
    - ".png"
    - ".jpg"
    - ".jpeg"
    - ".gif"
    - ".svg"
    - ".ico"
    - ".pdf"
    - ".txt"
    - ".xml"
    - ".json"

# SSL/TLS configuration
ssl:
  # Email for Let's Encrypt registration (REQUIRED - update this!)
  email: "admin@yourdomain.com"
  
  # Use staging environment for testing (set to false for production certificates)
  # Staging certificates are not trusted by browsers but useful for testing
  staging: true
  
  # Automatic certificate renewal
  auto_renew: true

# Enhanced Security settings
security:
  # Authentication settings
  min_password_length: 12
  max_login_attempts: 3
  lockout_duration_minutes: 15
  password_hash_rounds: 12
  
  # Session management
  session_timeout: 30  # Minutes - Reduced for better security
  max_concurrent_sessions: 3
  
  # Rate limiting
  rate_limit: 30  # Requests per minute - Reduced to prevent abuse
  burst_limit: 10
  
  # CORS settings - Restrict to your domains only
  cors_origins:
    - "http://localhost:8080"
    - "http://127.0.0.1:8080"
    # Add your production domain:
    # - "https://yourdomain.com"
  cors_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
  cors_headers:
    - "Content-Type"
    - "Authorization"
  
  # File upload security
  max_file_size_mb: 50  # Reduced from 100MB
  max_files_per_upload: 10
  allowed_file_extensions:
    - ".html"
    - ".htm"
    - ".css"
    - ".js"
    - ".json"
    - ".xml"
    - ".png"
    - ".jpg"
    - ".jpeg"
    - ".gif"
    - ".svg"
    - ".ico"
    - ".pdf"
    - ".txt"
    - ".md"
    - ".zip"
  blocked_file_extensions:  # Security: Block dangerous file types
    - ".php"
    - ".asp"
    - ".jsp"
    - ".exe"
    - ".bat"
    - ".sh"
    - ".py"
    - ".rb"
    - ".pl"
    - ".cgi"
    - ".scr"
    - ".vbs"
  
  # IP security (enable for production environments)
  ip_whitelist_enabled: false
  allowed_ip_ranges:
    - "127.0.0.1/32"      # Localhost
    - "192.168.0.0/16"    # Private network
    - "10.0.0.0/8"        # Private network
    # Add your public IP for remote access:
    # - "your.public.ip/32"
  
  # Content security
  enable_content_scanning: true  # Scan uploaded files for threats
  
  # Security headers
  enable_hsts: true
  hsts_max_age: 31536000  # 1 year
  enable_csrf_protection: true

# Logging configuration
logging:
  # Log level: DEBUG, INFO, WARNING, ERROR
  level: "INFO"
  
  # Log format
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # Log to file
  file: "/var/log/nginx-manager/app.log"

# Database configuration
database:
  # SQLite database file path
  url: "sqlite:///./data/sites.db"
  
  # Connection pool settings
  pool_size: 10
  max_overflow: 20